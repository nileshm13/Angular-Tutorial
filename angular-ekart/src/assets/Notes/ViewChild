Template Referencing used above will only be available on button click, but what if we need it as soon as page laod, for it we use @ViewChild
  // @ViewChild allows us to access DOM, Directive or Component
  //   ViewChild(selector: string | Function | ProviderToken<unknown>, opts?: {
  //     read?: any;
  //     static?: boolean;
  // }): any
  selector - The directive type or the name used for querying.
  read - Used to read a different token from the queried elements.
  static - True to resolve query results before change detection runs, false to resolve after change detection. Defaults to false.

  When assiging to template variables, can use ElementRef as return type

  ViewChild for Component:
  Task: A pop-up showing product details when product is clicked
  We created product-details component inside container, then inside product-list component, on click, assign selectedProduct object with product, container component will be able to access product-list using viewchild, then pass on this viewchild element reference from container to child product-details wherein it is assigned to product object. This product object is rendered in HTML pop-up.
  When a view child reference is passed from parent to another child object, access it inside ngOnInIt() as this reference won't have value before that. This is because child reference constructor gets initialized before parent reference constructor.  
